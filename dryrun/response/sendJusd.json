{
"error": "",
"protocol-version": "future",
"txns": [
{
"disassembly": null
},
{
"app-call-messages": [
"ApprovalProgram",
"REJECT",
"logic eval error: fee too small []transactions.SignedTxnWithAD{transactions.SignedTxnWithAD{_struct:struct {}{}, SignedTxn:transactions.SignedTxn{_struct:struct {}{}, Sig:crypto.Signature{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Msig:crypto.MultisigSig{_struct:struct {}{}, Version:0x0, Threshold:0x0, Subsigs:[]crypto.MultisigSubsig(nil)}, Lsig:transactions.LogicSig{_struct:struct {}{}, Logic:[]uint8(nil), Sig:crypto.Signature{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Msig:crypto.MultisigSig{_struct:struct {}{}, Version:0x0, Threshold:0x0, Subsigs:[]crypto.MultisigSubsig(nil)}, Args:[][]uint8(nil)}, Txn:transactions.Transaction{_struct:struct {}{}, Type:\"axfer\", Header:transactions.Header{_struct:struct {}{}, Sender:basics.Address{0x29, 0xe0, 0xf5, 0xa6, 0xb1, 0x77, 0xcb, 0x53, 0xe1, 0x42, 0x6, 0xa4, 0x68, 0xed, 0x1f, 0xc9, 0xce, 0xa3, 0x82, 0x12, 0xe0, 0xc, 0xe0, 0x54, 0xc6, 0x32, 0x60, 0x9c, 0x4e, 0x61, 0xa9, 0x13}, Fee:basics.MicroAlgos{Raw:0x0}, FirstValid:0x71, LastValid:0x459, Note:[]uint8(nil), GenesisID:\"\", GenesisHash:crypto.Digest{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Group:crypto.Digest{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Lease:[32]uint8{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, RekeyTo:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, KeyregTxnFields:transactions.KeyregTxnFields{_struct:struct {}{}, VotePK:crypto.OneTimeSignatureVerifier{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, SelectionPK:crypto.VrfPubkey{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, StateProofPK:merklesignature.Verifier{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, VoteFirst:0x0, VoteLast:0x0, VoteKeyDilution:0x0, Nonparticipation:false}, PaymentTxnFields:transactions.PaymentTxnFields{_struct:struct {}{}, Receiver:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Amount:basics.MicroAlgos{Raw:0x0}, CloseRemainderTo:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, AssetConfigTxnFields:transactions.AssetConfigTxnFields{_struct:struct {}{}, ConfigAsset:0x0, AssetParams:basics.AssetParams{_struct:struct {}{}, Total:0x0, Decimals:0x0, DefaultFrozen:false, UnitName:\"\", AssetName:\"\", URL:\"\", MetadataHash:[32]uint8{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Manager:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Reserve:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Freeze:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Clawback:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}}, AssetTransferTxnFields:transactions.AssetTransferTxnFields{_struct:struct {}{}, XferAsset:0x38, AssetAmount:0xe8d4a51000, AssetSender:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, AssetReceiver:basics.Address{0xd, 0x8c, 0xd1, 0xda, 0x6d, 0x98, 0x3c, 0x92, 0x19, 0xf8, 0xe1, 0x81, 0xac, 0x50, 0xa3, 0x79, 0x4a, 0xc7, 0xe1, 0x51, 0x64, 0xe8, 0x38, 0x68, 0x80, 0xfe, 0x9b, 0x26, 0x44, 0x26, 0x5a, 0x7f}, AssetCloseTo:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, AssetFreezeTxnFields:transactions.AssetFreezeTxnFields{_struct:struct {}{}, FreezeAccount:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, FreezeAsset:0x0, AssetFrozen:false}, ApplicationCallTxnFields:transactions.ApplicationCallTxnFields{_struct:struct {}{}, ApplicationID:0x0, OnCompletion:0x0, ApplicationArgs:[][]uint8(nil), Accounts:[]basics.Address(nil), ForeignApps:[]basics.AppIndex(nil), ForeignAssets:[]basics.AssetIndex(nil), LocalStateSchema:basics.StateSchema{_struct:struct {}{}, NumUint:0x0, NumByteSlice:0x0}, GlobalStateSchema:basics.StateSchema{_struct:struct {}{}, NumUint:0x0, NumByteSlice:0x0}, ApprovalProgram:[]uint8(nil), ClearStateProgram:[]uint8(nil), ExtraProgramPages:0x0}, CompactCertTxnFields:transactions.CompactCertTxnFields{_struct:struct {}{}, CertRound:0x0, CertType:0x0, Cert:compactcert.Cert{_struct:struct {}{}, SigCommit:crypto.GenericDigest(nil), SignedWeight:0x0, SigProofs:merklearray.Proof{_struct:struct {}{}, Path:[]crypto.GenericDigest(nil), HashFactory:crypto.HashFactory{_struct:struct {}{}, HashType:0x0}, TreeDepth:0x0}, PartProofs:merklearray.Proof{_struct:struct {}{}, Path:[]crypto.GenericDigest(nil), HashFactory:crypto.HashFactory{_struct:struct {}{}, HashType:0x0}, TreeDepth:0x0}, Reveals:map[uint64]compactcert.Reveal(nil)}}}, AuthAddr:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, ApplyData:transactions.ApplyData{_struct:struct {}{}, ClosingAmount:basics.MicroAlgos{Raw:0x0}, AssetClosingAmount:0x0, SenderRewards:basics.MicroAlgos{Raw:0x0}, ReceiverRewards:basics.MicroAlgos{Raw:0x0}, CloseRewards:basics.MicroAlgos{Raw:0x0}, EvalDelta:transactions.EvalDelta{_struct:struct {}{}, GlobalDelta:basics.StateDelta(nil), LocalDeltas:map[uint64]basics.StateDelta(nil), Logs:[]string(nil), InnerTxns:[]transactions.SignedTxnWithAD(nil)}, ConfigAsset:0x0, ApplicationID:0x0}}}. Details: pc=767, opcodes=txna Accounts 1\nitxn_field AssetReceiver\nitxn_submit\n"
],
"app-call-trace": [
{
"line": 1,
"pc": 1,
"stack": []
},
{
"line": 2,
"pc": 12,
"stack": []
},
{
"line": 3,
"pc": 61,
"stack": []
},
{
"line": 4,
"pc": 62,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 0
}
]
},
{
"line": 5,
"pc": 64,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 0
},
{
"bytes": "",
"type": 2,
"uint": 2
}
]
},
{
"line": 6,
"pc": 65,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 0
}
]
},
{
"line": 7,
"pc": 68,
"stack": []
},
{
"line": 8,
"pc": 70,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 0
}
]
},
{
"line": 9,
"pc": 71,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 0
},
{
"bytes": "",
"type": 2,
"uint": 0
}
]
},
{
"line": 10,
"pc": 72,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 1
}
]
},
{
"line": 21,
"pc": 91,
"stack": []
},
{
"line": 22,
"pc": 94,
"stack": [
{
"bytes": "aJgJQw==",
"type": 1,
"uint": 0
}
]
},
{
"line": 23,
"pc": 100,
"stack": [
{
"bytes": "aJgJQw==",
"type": 1,
"uint": 0
},
{
"bytes": "aJgJQw==",
"type": 1,
"uint": 0
}
]
},
{
"line": 24,
"pc": 101,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 1
}
]
},
{
"line": 412,
"pc": 739,
"stack": []
},
{
"line": 413,
"pc": 740,
"stack": []
},
{
"line": 414,
"pc": 741,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 0
}
]
},
{
"line": 415,
"pc": 743,
"stack": []
},
{
"line": 416,
"pc": 744,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 4
}
]
},
{
"line": 417,
"pc": 746,
"stack": []
},
{
"line": 418,
"pc": 753,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 1000000000000
}
]
},
{
"line": 419,
"pc": 755,
"stack": []
},
{
"line": 420,
"pc": 757,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 2
}
]
},
{
"line": 421,
"pc": 758,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 2
},
{
"bytes": "anVzZA==",
"type": 1,
"uint": 0
}
]
},
{
"line": 422,
"pc": 759,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 56
},
{
"bytes": "",
"type": 2,
"uint": 1
}
]
},
{
"line": 423,
"pc": 760,
"stack": [
{
"bytes": "",
"type": 2,
"uint": 56
}
]
},
{
"line": 424,
"pc": 762,
"stack": []
},
{
"line": 425,
"pc": 765,
"stack": [
{
"bytes": "DYzR2m2YPJIZ+OGBrFCjeUrH4VFk6DhogP6bJkQmWn8=",
"type": 1,
"uint": 0
}
]
},
{
"line": 426,
"pc": 767,
"stack": []
},
{
"error": "fee too small []transactions.SignedTxnWithAD{transactions.SignedTxnWithAD{_struct:struct {}{}, SignedTxn:transactions.SignedTxn{_struct:struct {}{}, Sig:crypto.Signature{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Msig:crypto.MultisigSig{_struct:struct {}{}, Version:0x0, Threshold:0x0, Subsigs:[]crypto.MultisigSubsig(nil)}, Lsig:transactions.LogicSig{_struct:struct {}{}, Logic:[]uint8(nil), Sig:crypto.Signature{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Msig:crypto.MultisigSig{_struct:struct {}{}, Version:0x0, Threshold:0x0, Subsigs:[]crypto.MultisigSubsig(nil)}, Args:[][]uint8(nil)}, Txn:transactions.Transaction{_struct:struct {}{}, Type:\"axfer\", Header:transactions.Header{_struct:struct {}{}, Sender:basics.Address{0x29, 0xe0, 0xf5, 0xa6, 0xb1, 0x77, 0xcb, 0x53, 0xe1, 0x42, 0x6, 0xa4, 0x68, 0xed, 0x1f, 0xc9, 0xce, 0xa3, 0x82, 0x12, 0xe0, 0xc, 0xe0, 0x54, 0xc6, 0x32, 0x60, 0x9c, 0x4e, 0x61, 0xa9, 0x13}, Fee:basics.MicroAlgos{Raw:0x0}, FirstValid:0x71, LastValid:0x459, Note:[]uint8(nil), GenesisID:\"\", GenesisHash:crypto.Digest{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Group:crypto.Digest{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Lease:[32]uint8{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, RekeyTo:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, KeyregTxnFields:transactions.KeyregTxnFields{_struct:struct {}{}, VotePK:crypto.OneTimeSignatureVerifier{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, SelectionPK:crypto.VrfPubkey{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, StateProofPK:merklesignature.Verifier{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, VoteFirst:0x0, VoteLast:0x0, VoteKeyDilution:0x0, Nonparticipation:false}, PaymentTxnFields:transactions.PaymentTxnFields{_struct:struct {}{}, Receiver:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Amount:basics.MicroAlgos{Raw:0x0}, CloseRemainderTo:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, AssetConfigTxnFields:transactions.AssetConfigTxnFields{_struct:struct {}{}, ConfigAsset:0x0, AssetParams:basics.AssetParams{_struct:struct {}{}, Total:0x0, Decimals:0x0, DefaultFrozen:false, UnitName:\"\", AssetName:\"\", URL:\"\", MetadataHash:[32]uint8{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Manager:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Reserve:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Freeze:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, Clawback:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}}, AssetTransferTxnFields:transactions.AssetTransferTxnFields{_struct:struct {}{}, XferAsset:0x38, AssetAmount:0xe8d4a51000, AssetSender:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, AssetReceiver:basics.Address{0xd, 0x8c, 0xd1, 0xda, 0x6d, 0x98, 0x3c, 0x92, 0x19, 0xf8, 0xe1, 0x81, 0xac, 0x50, 0xa3, 0x79, 0x4a, 0xc7, 0xe1, 0x51, 0x64, 0xe8, 0x38, 0x68, 0x80, 0xfe, 0x9b, 0x26, 0x44, 0x26, 0x5a, 0x7f}, AssetCloseTo:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, AssetFreezeTxnFields:transactions.AssetFreezeTxnFields{_struct:struct {}{}, FreezeAccount:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, FreezeAsset:0x0, AssetFrozen:false}, ApplicationCallTxnFields:transactions.ApplicationCallTxnFields{_struct:struct {}{}, ApplicationID:0x0, OnCompletion:0x0, ApplicationArgs:[][]uint8(nil), Accounts:[]basics.Address(nil), ForeignApps:[]basics.AppIndex(nil), ForeignAssets:[]basics.AssetIndex(nil), LocalStateSchema:basics.StateSchema{_struct:struct {}{}, NumUint:0x0, NumByteSlice:0x0}, GlobalStateSchema:basics.StateSchema{_struct:struct {}{}, NumUint:0x0, NumByteSlice:0x0}, ApprovalProgram:[]uint8(nil), ClearStateProgram:[]uint8(nil), ExtraProgramPages:0x0}, CompactCertTxnFields:transactions.CompactCertTxnFields{_struct:struct {}{}, CertRound:0x0, CertType:0x0, Cert:compactcert.Cert{_struct:struct {}{}, SigCommit:crypto.GenericDigest(nil), SignedWeight:0x0, SigProofs:merklearray.Proof{_struct:struct {}{}, Path:[]crypto.GenericDigest(nil), HashFactory:crypto.HashFactory{_struct:struct {}{}, HashType:0x0}, TreeDepth:0x0}, PartProofs:merklearray.Proof{_struct:struct {}{}, Path:[]crypto.GenericDigest(nil), HashFactory:crypto.HashFactory{_struct:struct {}{}, HashType:0x0}, TreeDepth:0x0}, Reveals:map[uint64]compactcert.Reveal(nil)}}}, AuthAddr:basics.Address{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}}, ApplyData:transactions.ApplyData{_struct:struct {}{}, ClosingAmount:basics.MicroAlgos{Raw:0x0}, AssetClosingAmount:0x0, SenderRewards:basics.MicroAlgos{Raw:0x0}, ReceiverRewards:basics.MicroAlgos{Raw:0x0}, CloseRewards:basics.MicroAlgos{Raw:0x0}, EvalDelta:transactions.EvalDelta{_struct:struct {}{}, GlobalDelta:basics.StateDelta(nil), LocalDeltas:map[uint64]basics.StateDelta(nil), Logs:[]string(nil), InnerTxns:[]transactions.SignedTxnWithAD(nil)}, ConfigAsset:0x0, ApplicationID:0x0}}}",
"line": 426,
"pc": 767,
"stack": []
}
],
"cost": 29,
"disassembly": [
"#pragma version 6",
"intcblock 0 2 6 4 1 3 300000",
"bytecblock 0x6c7174 0x6a696e61 0x6a757364 0x75736463 0x2178a540 0x4a555344 0x68747470733a2f2f 0x4a4e41 0xe95cff4c",
"intc_0 // 0",
"txn ApplicationID",
"==",
"bnz label1",
"txn OnCompletion",
"intc_0 // 0",
"==",
"bnz label2",
"txn OnCompletion",
"intc_3 // 4",
"==",
"bnz label3",
"txn OnCompletion",
"pushint 5",
"==",
"bnz label3",
"err",
"label2:",
"txna ApplicationArgs 0",
"pushbytes 0x68980943 // 0x68980943",
"==",
"bnz label4",
"txna ApplicationArgs 0",
"pushbytes 0x72665835 // \"rfX5\"",
"==",
"bnz label5",
"txna ApplicationArgs 0",
"pushbytes 0xcf4d086a // 0xcf4d086a",
"==",
"bnz label6",
"txna ApplicationArgs 0",
"pushbytes 0x4ad92b19 // 0x4ad92b19",
"==",
"bnz label7",
"txna ApplicationArgs 0",
"pushbytes 0x53ff1a06 // 0x53ff1a06",
"==",
"bnz label1",
"txna ApplicationArgs 0",
"pushbytes 0xeae0f0da // 0xeae0f0da",
"==",
"bnz label8",
"err",
"label5:",
"itxn_begin",
"intc_0 // 0",
"itxn_field Fee",
"intc_2 // 6",
"itxn_field TypeEnum",
"global CurrentApplicationID",
"bytec_0 // \"lqt\"",
"app_global_get_ex",
"assert",
"itxn_field ApplicationID",
"intc_0 // 0",
"itxn_field OnCompletion",
"pushbytes 0x983acdf0 // 0x983acdf0",
"txna ApplicationArgs 1",
"btoi",
"txn Sender",
"txna ApplicationArgs 2",
"btoi",
"txna ApplicationArgs 3",
"itxn_field ApplicationArgs",
"txna ApplicationArgs 2",
"btoi",
"itxn_field Assets",
"global CurrentApplicationID",
"global CurrentApplicationID",
"bytec_1 // \"jina\"",
"app_global_get_ex",
"assert",
"itxn_field Applications",
"txn Sender",
"txna ApplicationArgs 3",
"itxn_field Accounts",
"itxn_submit",
"intc 4 // 1",
"return",
"label1:",
"bytec_3 // \"usdc\"",
"txna Assets 0",
"app_global_put",
"b label3",
"label7:",
"callsub label9",
"callsub label10",
"callsub label11",
"callsub label12",
"pushbytes 0x151f7c75 // 0x151f7c75",
"load 9",
"concat",
"log",
"b label3",
"label9:",
"itxn_begin",
"intc_0 // 0",
"itxn_field Fee",
"intc_2 // 6",
"itxn_field TypeEnum",
"intc 4 // 1",
"itxn_field GlobalNumUint",
"intc_0 // 0",
"dup",
"dup",
"itxn_field GlobalNumByteSlice",
"itxn_field LocalNumUint",
"itxn_field LocalNumByteSlice",
"intc_0 // 0",
"itxn_field OnCompletion",
"bytec 4 // 0x2178a540",
"itxn_field ApplicationArgs",
"global CurrentApplicationID",
"itxn_field Applications",
"txna ApplicationArgs 2",
"dup",
"len",
"intc_1 // 2",
"swap",
"substring3",
"itxn_field ApprovalProgram",
"txna ApplicationArgs 3",
"dup",
"len",
"intc_1 // 2",
"swap",
"substring3",
"itxn_field ClearStateProgram",
"itxn_submit",
"bytec_0 // \"lqt\"",
"itxn CreatedApplicationID",
"dup",
"itob",
"store 9",
"app_global_put",
"retsub",
"label10:",
"itxn_begin",
"intc_0 // 0",
"itxn_field Fee",
"intc_2 // 6",
"itxn_field TypeEnum",
"intc 4 // 1",
"itxn_field GlobalNumUint",
"intc_0 // 0",
"itxn_field GlobalNumByteSlice",
"intc_1 // 2",
"itxn_field LocalNumUint",
"intc_3 // 4",
"itxn_field LocalNumByteSlice",
"intc_0 // 0",
"itxn_field OnCompletion",
"bytec 4 // 0x2178a540",
"itxn_field ApplicationArgs",
"global CurrentApplicationID",
"itxn_field Applications",
"txna ApplicationArgs 4",
"dup",
"len",
"intc_1 // 2",
"swap",
"substring3",
"itxn_field ApprovalProgram",
"txna ApplicationArgs 5",
"dup",
"len",
"intc_1 // 2",
"swap",
"substring3",
"itxn_field ClearStateProgram",
"itxn_submit",
"bytec_1 // \"jina\"",
"itxn CreatedApplicationID",
"dup",
"itob",
"load 9",
"swap",
"concat",
"store 9",
"app_global_put",
"retsub",
"label11:",
"itxn_begin",
"intc_0 // 0",
"itxn_field Fee",
"intc 5 // 3",
"itxn_field TypeEnum",
"global CurrentApplicationID",
"bytec_3 // \"usdc\"",
"app_global_get_ex",
"assert",
"dup",
"asset_params_get AssetTotal",
"assert",
"itxn_field ConfigAssetTotal",
"asset_params_get AssetDecimals",
"assert",
"itxn_field ConfigAssetDecimals",
"bytec 5 // \"JUSD\"",
"itxn_field ConfigAssetUnitName",
"bytec 5 // \"JUSD\"",
"itxn_field ConfigAssetName",
"bytec 6 // \"https://\"",
"itxn_field ConfigAssetURL",
"global CurrentApplicationAddress",
"itxn_field ConfigAssetManager",
"global CurrentApplicationID",
"bytec_1 // \"jina\"",
"app_global_get_ex",
"assert",
"app_params_get AppAddress",
"assert",
"dup",
"itxn_field ConfigAssetReserve",
"itxn_field ConfigAssetFreeze",
"global CurrentApplicationID",
"bytec_0 // \"lqt\"",
"app_global_get_ex",
"assert",
"app_params_get AppAddress",
"assert",
"itxn_field ConfigAssetClawback",
"itxn_submit",
"bytec_2 // \"jusd\"",
"itxn CreatedAssetID",
"dup",
"itob",
"load 9",
"swap",
"concat",
"store 9",
"app_global_put",
"retsub",
"label12:",
"itxn_begin",
"intc_0 // 0",
"itxn_field Fee",
"intc 5 // 3",
"itxn_field TypeEnum",
"global CurrentApplicationID",
"pushint 1000",
"itxn_field ConfigAssetTotal",
"intc_0 // 0",
"itxn_field ConfigAssetDecimals",
"bytec 7 // \"JNA\"",
"itxn_field ConfigAssetUnitName",
"bytec 7 // \"JNA\"",
"itxn_field ConfigAssetName",
"bytec 6 // \"https://\"",
"itxn_field ConfigAssetURL",
"global CurrentApplicationAddress",
"dup",
"itxn_field ConfigAssetManager",
"itxn_field ConfigAssetReserve",
"global CurrentApplicationID",
"bytec_1 // \"jina\"",
"app_global_get_ex",
"assert",
"app_params_get AppAddress",
"assert",
"itxn_field ConfigAssetFreeze",
"global CurrentApplicationID",
"bytec_0 // \"lqt\"",
"app_global_get_ex",
"assert",
"app_params_get AppAddress",
"assert",
"itxn_field ConfigAssetClawback",
"itxn_submit",
"pushbytes 0x6a6e61 // \"jna\"",
"itxn CreatedAssetID",
"dup",
"itob",
"load 9",
"swap",
"concat",
"store 9",
"app_global_put",
"retsub",
"label6:",
"itxn_begin",
"intc_0 // 0",
"itxn_field Fee",
"intc 4 // 1",
"itxn_field TypeEnum",
"intc 6 // 300000",
"itxn_field Amount",
"global CurrentApplicationID",
"bytec_0 // \"lqt\"",
"app_global_get_ex",
"assert",
"app_params_get AppAddress",
"assert",
"itxn_field Receiver",
"itxn_next",
"intc_0 // 0",
"itxn_field Fee",
"intc 4 // 1",
"itxn_field TypeEnum",
"intc 6 // 300000",
"itxn_field Amount",
"global CurrentApplicationID",
"bytec_1 // \"jina\"",
"app_global_get_ex",
"assert",
"app_params_get AppAddress",
"assert",
"itxn_field Receiver",
"itxn_next",
"intc_0 // 0",
"itxn_field Fee",
"intc_2 // 6",
"itxn_field TypeEnum",
"intc_0 // 0",
"itxn_field OnCompletion",
"global CurrentApplicationID",
"bytec_0 // \"lqt\"",
"app_global_get_ex",
"assert",
"itxn_field ApplicationID",
"bytec 8 // 0xe95cff4c",
"itxn_field ApplicationArgs",
"global CurrentApplicationID",
"itxn_field Applications",
"global CurrentApplicationID",
"bytec_2 // \"jusd\"",
"app_global_get_ex",
"assert",
"itxn_field Assets",
"global CurrentApplicationID",
"bytec_3 // \"usdc\"",
"app_global_get_ex",
"assert",
"itxn_field Assets",
"itxn_next",
"intc_0 // 0",
"itxn_field Fee",
"intc_2 // 6",
"itxn_field TypeEnum",
"intc_0 // 0",
"itxn_field OnCompletion",
"global CurrentApplicationID",
"bytec_1 // \"jina\"",
"app_global_get_ex",
"assert",
"itxn_field ApplicationID",
"global CurrentApplicationID",
"itxn_field Applications",
"global CurrentApplicationID",
"bytec_2 // \"jusd\"",
"app_global_get_ex",
"assert",
"itxn_field Assets",
"global CurrentApplicationID",
"bytec_3 // \"usdc\"",
"app_global_get_ex",
"assert",
"itxn_field Assets",
"bytec 8 // 0xe95cff4c",
"itxn_field ApplicationArgs",
"itxn_next",
"intc_0 // 0",
"itxn_field Fee",
"intc_3 // 4",
"itxn_field TypeEnum",
"global CurrentApplicationAddress",
"global CurrentApplicationID",
"bytec_2 // \"jusd\"",
"app_global_get_ex",
"assert",
"asset_holding_get AssetBalance",
"assert",
"itxn_field AssetAmount",
"global CurrentApplicationID",
"bytec_2 // \"jusd\"",
"app_global_get_ex",
"assert",
"asset_params_get AssetReserve",
"assert",
"itxn_field AssetReceiver",
"itxn_submit",
"b label3",
"label8:",
"itxn_begin",
"intc_0 // 0",
"itxn_field Fee",
"intc_2 // 6",
"itxn_field TypeEnum",
"intc_3 // 4",
"itxn_field OnCompletion",
"txna Applications 1",
"itxn_field Applications",
"txna ApplicationArgs 2",
"dup",
"len",
"intc_1 // 2",
"swap",
"substring3",
"itxn_field ApprovalProgram",
"txna ApplicationArgs 3",
"dup",
"len",
"intc_1 // 2",
"swap",
"substring3",
"itxn_field ClearStateProgram",
"itxn_submit",
"b label3",
"label4:",
"itxn_begin",
"intc_0 // 0",
"itxn_field Fee",
"intc_3 // 4",
"itxn_field TypeEnum",
"pushint 1000000000000",
"itxn_field AssetAmount",
"global CurrentApplicationID",
"bytec_2 // \"jusd\"",
"app_global_get_ex",
"assert",
"itxn_field XferAsset",
"txna Accounts 1",
"itxn_field AssetReceiver",
"itxn_submit",
"b label3",
"label3:",
"global CreatorAddress",
"txn Sender",
"==",
"return",
""
]
}
]
}